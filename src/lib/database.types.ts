export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[];

export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string; // UUID
          username: string;
          // ... other fields
        };
        Insert: {
          id?: string; // UUID is now optional on insert as it's generated by default
          username: string;
          // ... other fields
        };
        Update: {
          id?: string; // UUID can be updated
          username?: string;
          // ... other fields
        };
      };
      movies: {
        Row: {
          id: number;
          title: string;
          year: number;
          director: string;
          rating: number;
          overview: string;
          poster_path: string | null;
          tmdb_id: number | null;
        };
        Insert: {
          title: string;
          year: number;
          director: string;
          rating: number;
          overview: string;
          poster_path?: string | null;
          tmdb_id?: number | null;
        };
        Update: {
          title?: string;
          year?: number;
          director?: string;
          rating?: number;
          overview?: string;
          poster_path?: string | null;
          tmdb_id?: number | null;
        };
      };
      watchlist: {
        Row: {
          id: number;
          user_id: string; // UUID
          movie_id: number;
          added_at: string;
          status: string;
        };
        Insert: {
          user_id: string; // UUID
          movie_id: number;
          added_at?: string;
          status: string;
        };
        Update: {
          user_id?: string; // UUID
          movie_id?: number;
          added_at?: string;
          status?: string;
        };
      };
      friendships: {
        Row: {
          id: number;
          user_id: string; // UUID
          friend_id: string; // UUID
          created_at: string;
        };
        Insert: {
          user_id: string; // UUID
          friend_id: string; // UUID
          created_at?: string;
        };
        Update: {
          user_id?: string; // UUID
          friend_id?: string; // UUID
          created_at?: string;
        };
      };
    };
  };
}

export type Tables<T extends keyof Database["public"]["Tables"]> =
  Database["public"]["Tables"][T]["Row"];
export type Insertable<T extends keyof Database["public"]["Tables"]> =
  Database["public"]["Tables"][T]["Insert"];
export type Updatable<T extends keyof Database["public"]["Tables"]> =
  Database["public"]["Tables"][T]["Update"];

// Remove the Enums type entirely if it's not being used
